<?php

use Application\Provider\Privileges;
use Application\View\Renderer\PhpRenderer;
use Contrat\Entity\Db\Contrat;
use Contrat\Entity\Db\TblContrat;
use Contrat\Entity\Db\TypeContrat;
use Intervenant\Entity\Db\Intervenant;
use Workflow\Entity\Db\WorkflowEtape;

/**
 * @var PhpRenderer        $this
 * @var string             $title
 * @var Intervenant        $intervenant
 * @var bool               $contratDirect
 * @var string             $emailIntervenant
 * @var array|TblContrat[] $contratsNonContractualises
 * @var array|TblContrat[] $contratsContractualises
 * @var string             $libelleCircuitSignature
 * @var array              $infosSignature
 * @var bool               $contratSignatureActivation
 * @var bool               $isMission
 */

$this->intervenant($intervenant)->renderTitle("Contrat/avenant");
$this->messenger()->setMessagesFromFlashMessengerWithNoNamespace();
$libelleMessageHeures = (!$isMission)?'Des heures prévisionnelles d\'enseignement':'Des heures prévisionnelles de missions';
$libelleMessage = (!$isMission)?'Tous les enseignements prévisionnels validés' : 'Toutes les missions validées';

if (!empty($contratsNonContractualises)) {
    $this->messenger()->addMessage($libelleMessageHeures. ' validées ne font l\'objet d\'aucun contrat ou avenant. En voici la liste ci-dessous :', 'info');
} else {
    $this->messenger()->addMessage($libelleMessage .' ont fait l\'objet d\'un contrat ou d\'un avenant.', 'success');
}
echo $this->messenger() ?>

<style>
    th.structure, td.structure {
        width: 10%;
    }

    td .card {
        margin-bottom: 0px;
    }
</style>

<?php if (!empty($contratsContractualises) || !empty($contratsNonContractualises)) : ?>
    <?php if ($contratsNonContractualises): ?>
        <table class="table table-bordered table-hover">
            <tr>
                <th class="structure">Composante</th>
                <th>heure(s) non contractualisé(s)</th>
            </tr>
            <?php foreach ($contratsNonContractualises as $tblContrat):
                $structure = $tblContrat->getStructure();

                $contrat = new Contrat();
                $contrat->setIntervenant($intervenant);
                $contrat->setStructure($structure);
                $canCreer = $this->isAllowed($contrat, Privileges::CONTRAT_CREATION);
                ?>

                <tr>
                    <td>
                        <?php
                        if ($structure):
                            echo $structure;
                        else:
                            echo 'toutes composantes';
                        endif; ?>
                    </td>
                    <td>
                        <?php if ($canCreer): ?>
                            <a class="btn btn-primary"
                               href="<?= $this->url('contrat/creer', ['intervenant' => $intervenant->getId(), 'uuid' => $tblContrat->getUuid()]) ?>">
                                <i class="fas fa-file"></i>Créer
                                un
                                <?php if ($contratDirect): ?>
                                    <?= $tblContrat->getTypeContrat()->getCode() == TypeContrat::CODE_CONTRAT ? 'contrat' : 'avenant' ?>
                                <?php else: ?>
                                    projet <?= $tblContrat->getTypeContrat()->getCode() == TypeContrat::CODE_CONTRAT ? 'de contrat' : 'd\'avenant' ?>
                                <?php endif; ?>
                            </a>
                        <?php else:
                            try {
                                $workflowService = \Framework\Application\Application::getInstance()->container()->get(\Workflow\Service\WorkflowService::class);
                                $feuilleDeRoute = $workflowService->getFeuilleDeRoute($intervenant, $structure);
                                $wfEtape = $feuilleDeRoute->get(WorkflowEtape::CONTRAT);
                                if ($wfEtape && $wfEtape->whyNonAtteignable){

                                    foreach ($wfEtape->whyNonAtteignable as $raison) {
                                        ?>
                                        <div class="alert alert-danger alert-dismissible" role="alert">
                                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                                            <?= $raison ?>
                                        </div>
                                        <?php
                                    }
                                }
                            } catch (\Exception $e) {
                                echo "Ces heures ne peuvent pas être contractualisées";
                            }
                        endif; ?>
                        <?php if (count($tblContrat->getVolumesHoraires()) > 0):?>
                            <p>
                                Services (validés) non contractualisés :<br/>
                                <small><a title="Cliquez pour afficher/masquer les enseignements concernés"
                                          href="#details-enseignements-contrat-<?= $tblContrat->getUuid(); ?>"
                                          role="button"
                                          aria-expanded="true"
                                          aria-controls="details-enseignements-contrat-<?= $tblContrat->getUuid(); ?>"
                                          data-bs-toggle="collapse"
                                    >Afficher/masquer</a></small>
                            </p>
                            <div class="collapse <?php if ($canCreer): ?>in<?php endif; ?>"
                                 id="details-enseignements-contrat-<?= $tblContrat->getUuid(); ?>">
                                <?= $this->partial('contrat/contrat/partial/contrat-heures', ['tblContrat' => $tblContrat]); ?>
                            </div>
                        <?php endif; ?>
                    </td>
                </tr>
            <?php endforeach; ?>
        </table>
    <?php endif; ?>
    <?php if (isset($contratsContractualises)): ?>
        <div class="well">
            <h2>Contrats et avenants</h2>

            <?php foreach ($contratsContractualises as $tblContrat) {
                $contrat = $tblContrat->getContrat();
                if ($contratSignatureActivation && !((!empty($contrat->getDateRetourSigne() || !$contrat->getFichier()->isEmpty()) && empty($contrat->getProcessSignature())))):
                    echo $this->partial('contrat/contrat/partial/contrat-signature-electronique', ['tblContrat' => $tblContrat, 'emailIntervenant' => $emailIntervenant, 'contratDirect' => $contratDirect, 'contratSignatureActivation' => $contratSignatureActivation, 'libelleCircuitSignature' => $libelleCircuitSignature, 'infosSignature' => $infosSignature]);
                else:
                    echo $this->partial('contrat/contrat/partial/contrat', ['tblContrat' => $tblContrat, 'emailIntervenant' => $emailIntervenant, 'contratDirect' => $contratDirect]);
                endif;
            } ?>
        </div>

    <?php endif; ?>
<?php else: ?>
    <p>Aucun contrat/avenant trouvé.</p>
<?php endif; ?>

<hr/>
<?= $this->vue('workflow/nav', ['intervenant' => $intervenant->getId(), 'etape' => WorkflowEtape::CONTRAT]); ?>

<script>
    $("body").on("envoi-mail-contrat", function (event, data) {
        event.div.modal('hide'); // ferme la fenêtre modale
        window.location.reload();
    });
    $(document).ready(function () {

        let btnEnvoyerSignature = $("a[id='envoyer-signature']");
        let btnRefreshSignature = $("a[id='refresh-signature']");
        let btnSupprimerSignature = $("a[id='supprimer-signature']");
        let btnWaiting = $('#waiting-signature');
        let btnWaitingDelete = $('#waiting-delete-signature');


        btnEnvoyerSignature.click(function (e) {
            e.preventDefault();
            window.location.href = this.href;
            btnWaiting.removeClass('d-none');
            $(this).addClass('d-none');
        });

        btnRefreshSignature.click(function (e) {
            e.preventDefault();
            window.location.href = this.href;
            btnWaiting.removeClass('d-none');
            $(this).addClass('d-none');
        });

        btnSupprimerSignature.click(function (e) {
            e.preventDefault();
            window.location.href = this.href;
            btnWaitingDelete.removeClass('d-none');
            $(this).addClass('d-none');
        });


    });

</script>