<?php 
use Application\Assertion\PieceJointeAssertion;
use Application\Entity\Db\PieceJointe;
?>

<link href="<?php //echo $this->basePath('css/fileinput.min.css') ?>" media="screen" rel="stylesheet" type="text/css"> 

<?php $this->headTitle()->append($this->intervenant->getNomUsuel())->append("Pièces justificatives") ?>

<h1 class="page-header"><?php echo $title ?></h1>

<?php
$messenger = $this->messenger(true);
if ($complet) {
    $messenger->addMessage("Toutes les pièces justificatives obligatoires ont été fournies.", 'success');
}
else {
    $messenger->addMessage("Il manque des pièces justificatives obligatoires.", 'danger');
}
echo $messenger;
?>

<style>
    a.modele-doc { /*margin-left: 20px;*/ }
    /*span.text-warning { font-style: italic; }*/
</style>

<?php foreach($this->typesPieceJointeStatut as $tpjs): /* @var $tpjs \Application\Entity\Db\TypePieceJointeStatut */ ?>
    <?php 
    $tpj         = $tpjs->getType();
    $divId       = uniqid('div');
    $formId      = 'form-' . $tpj->getId();
    $urlLister   = $this->url('piece-jointe/intervenant/lister', ['typePieceJointe' => $tpj->getId()], [], true);
    $urlAjouter  = $this->url('piece-jointe/intervenant/ajouter', ['typePieceJointe' => $tpj->getId()], [], true);
    $assertionPj = (new PieceJointe())->setType($tpj); // instance d'entité transmise à l'assertion

    $obligatoire = $tpjs->getObligatoireToString($this->totalHETD);
    $linksModelesDocs = [];
    if (($url = $tpj->getUrlModeleDoc())) {
        $href = $this->basePath($url);
        $fileName = ltrim(strrchr($href, '/'), '/');
        $linksModelesDocs[] = '<a class="modele-doc" title="Cliquez pour télécharger le document à remplir" href="' 
                . $href . '"><span class="glyphicon glyphicon-file"></span> ' . $fileName . '</a>';
    }
    $type = (string) $tpj;
    if ($tpj->getCode() === \Application\Entity\Db\TypePieceJointe::CARTE_ETUD) {
        $type .= " $this->annee";
    }
    $label = sprintf('%s <span class="text-warning">%s</span>', $type, $obligatoire);
            
    $this->formUpload
            ->setAttribute('id', $formId)
            ->setAttribute('class', "upload-form")
            ->setAttribute('action', $urlAjouter)
            ->setAttribute('data-div-to-update', "#$divId")
            ->prepare(); // The correct enctype is set here 
    ?>
    <h2><?php echo $label ?></h2>
    <div class="row">
        <div class="col-md-7">
            <?php if ($linksModelesDocs): ?>
            <div>
                <label>Documents à télécharger et à remplir :</label><br />
                <?php echo $this->htmlList($linksModelesDocs, false, false, false) ?>
            </div>
            <?php endif ?>
            
            <div class="upload-container">
                
                <!-- Liste des fichiers déposés -->
                <label>Fichiers déposés pour cette pièce :</label>
                <div class="uploaded-files-div" id="<?php echo $divId ?>" data-url="<?php echo $urlLister ?>"><!-- màj via AJAX --></div>
                
                <!-- formulaire éventuel de dépôt de PJ -->
                <?php if ($this->isAllowed($assertionPj, PieceJointeAssertion::PRIVILEGE_CREATE)): ?>
                    <?php echo $this->form()->openTag($this->formUpload); ?>
                        <?php $fileElement = $this->formUpload->get('files')->setAttribute('class', "choose-file pull-left "); ?>
                        <div><?php echo $this->formLabel($fileElement); ?></div>
                        <?php echo $this->formFile($fileElement); ?>
                        <?php echo $this->formElementErrors($fileElement); ?>
                        <?php echo $this->formHidden($this->formUpload->get('security')); ?>
                        <button type="submit" class="pull-right upload-file btn btn-file btn-primary btn-xs" style="display: none;">
                            <span class="glyphicon glyphicon-upload"></span> Envoyer
                        </button>
                    <?php echo $this->form()->closeTag(); ?>
                <?php endif; ?>
                    
                <div class="clearfix"></div>
            </div>
        </div>
        <div class="col-md-5">
            Validation!!
        </div>
    </div>
    <hr />
<?php endforeach ?>

<br />
<?php 
$message = <<<EOS
<p><strong>Information importante</strong></p>
<p>Votre saisie est terminée.</p>
<p>Votre contrat ne pourra être édité qu'après réception et vérification de l'ensemble des pièces justificatives.<br />
Aucun enseignement ne pourra avoir lieu avant la signature du contrat.</p>
EOS;
echo $this->messenger()->setMessage($message, 'warning');
?>

<?php if ($role instanceof \Application\Acl\IntervenantRole): ?>
    <hr />
    <?php echo $this->workflow($role->getIntervenant(), $role)->navNext() ?>
<?php endif; ?>
    
    
<script>
$(function() {
    // interdiction de décocher une case déjà cochée!
    $("input[type=checkbox]:checked").not(":disabled").css('opacity', '0.5').click(function() { return false; });
});
</script>

<script>
$(function() {
    $(".upload-container").each(function() {
        var container = $(this);
        var form = $(".upload-form", container);
        var filesDiv = $(".uploaded-files-div", container);
        form.ajaxForm({
            target: filesDiv,
            success: function(responseText, statusText, xhr, form) {
                form.clearForm();
                showHideUploadButton();
                // interdiction du bouton d'envoi
                $(".upload-file", form).prop('disabled', false);
            },
            error: function() {
                alert("Oups, une erreur s'est produite pendant l'envoi de fichier! Essayez à nouveau, svp.");
            },
            beforeSubmit: function(arr, $form, options) {
                // The array of form data takes the following form:
                // [ { name: 'username', value: 'jresig' }, { name: 'password', value: 'secret' } ]
                // interdiction du bouton d'envoi
                $(".upload-file", form).prop('disabled', true);
                // ajout d'un témoin de chargement AJAX
                if (! $("ul", filesDiv).length) {
                   filesDiv.html("<ul/>"); 
                }
                $("ul", filesDiv).append($("<li/>").addClass("loading"));
                // return false to cancel submit
            },
        });
        // chargement initial de la liste des fichiers pour chaque type de pièce
        filesDiv.addClass("loading").refresh([], function() { filesDiv.removeClass("loading") });
        // écoute clic sur suppression de fichier pour faire la requête AJAX et rafraîchir la liste des fichiers
        filesDiv.on("click", ".delete-file", function(event) {
            var a = $(this);
            a.addClass("loading");
            $.post(a.prop('href'), [], function(data, textStatus, jqXHR) {
                filesDiv.refresh();
            });
            event.preventDefault();
        });
        // affichage/masquage bouton d'envoi selon sélection de fichier
        $(".choose-file", container).change(function() { showHideUploadButton($(this)); });
        // masquage initial du bouton d'envoi
        showHideUploadButton();
    });
});
function showHideUploadButton(browseButton) 
{
    var selector = browseButton ? browseButton : ".choose-file";
    $(selector).each(function(index, elem) {
        var sendBtn = $(elem).siblings(".upload-file");
        $(this).val() ? sendBtn.fadeIn() : sendBtn.hide();
    });
}
</script>
            
<?php //$this->inlineScript()->prependFile($this->basePath('js/fileinput.min.js')) ?>

<script src="http://malsup.github.com/jquery.form.js"></script> 