<?php

namespace Application\Service;

use Psr\Container\ContainerInterface;
use Unicaen\BddAdmin\Bdd;
use Unicaen\BddAdmin\BddFactory;


/**
 * Description of BddFactory
 *
 * @author Laurent Lécluse <laurent.lecluse at unicaen.fr>
 */
class OseBddAdminFactory extends BddFactory
{

    public function __invoke(ContainerInterface $container, $requestedName, $options = null): Bdd
    {
        $bdd = parent::__invoke($container, $requestedName, $options); // TODO: Change the autogenerated stub

        try {
            $oseAppliId = $this->getOseAppliId($bdd);
            $sourceOseId = $this->getSourceOseId($bdd);

            $bdd->setHistoUserId($oseAppliId);
            $bdd->setSourceId($sourceOseId);
        }catch(\Exception $e){
            // ne rien faire :
        }

        return $bdd;
    }



    public static function getOseAppliId(Bdd $bdd): int
    {
        $u = $bdd->select("SELECT ID FROM UTILISATEUR WHERE USERNAME='oseappli'");
        if (isset($u[0]['ID'])) {
            return (int)$u[0]['ID'];
        } else {
            throw new \Exception('Utilisateur système "oseappli" non trouvé!!');
        }
    }



    public static function getSourceOseId(Bdd $bdd): int
    {
        $src = $bdd->select("SELECT ID FROM SOURCE WHERE CODE='OSE'");
        if (isset($src[0]['ID'])) {
            return (int)$src[0]['ID'];
        } else {
            throw new \Exception('Source d\'import "OSE" non trouvée!!');
        }
    }

}