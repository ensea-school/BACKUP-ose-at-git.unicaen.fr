<?php $this->headTitle()->append($intervenant->getNomUsuel())->append("Modification de service dû") ?>

<h1 class="page-header"><?= $title ?></h1>

<?= $this->messenger()->addMessagesFromFlashMessenger() ?>

<style>
    form.modification-service-du .form-group {
        float: left;
        margin-right: 1em;
    }

    form.modification-service-du input {
        width: 100px;
    }

    form.modification-service-du input[type=submit] {
        margin-top: 2em;
    }

    button.modification-service-du-ajouter {
        display: block;
        margin-top: 0.5em;
    }

    button.modification-service-du-supprimer {
        margin: 2em 0 0 1em;
    }
</style>

<?php if (isset($exception)) {
    echo $this->messenger()->setException($exception);
} ?>

<?php
$form->setAttribute('id', $formId = uniqid('form-'))->prepare();
$modificationServiceDu = $form->get('fs');
?>

<?php
echo $this->form()->openTag($form);

//echo $this->formCollection()->setElementHelper($this->formControlGroup())->render($modificationServiceDu->get('modificationServiceDu'));
echo '<fieldset>' . "\n";
foreach ($modificationServiceDu->get('modificationServiceDu')->getIterator() as $fieldset) {
    $motif = $fieldset->getObject()->getMotif();
    /* @var $object \Application\Entity\Db\ModificationServiceDu */

    $motifElement = $fieldset->get('motif');
    /* @var $motifElement \Laminas\Form\Element\Select */

    echo '<fieldset><div class="form-group">';
    if ($motif && $motif->getHistoDestruction()) {
        $motifElement->setAttribute('class', $motifElement->getAttribute('class') . ' bg-historique');
        $motifElement->setValueOptions(array_merge($motifElement->getValueOptions(), [$motif->getId() => $motif->getLibelle() . ' (MOTIF OBSOLÈTE)']));
        echo $this->formControlGroup($motifElement);
    } else {
        echo $this->formControlGroup($motifElement);
    }

    echo $this->formControlGroup($fieldset->get('heures'));
    echo $this->formControlGroup($fieldset->get('commentaires'));
    echo $this->historique()
        ->setHistoModification($fieldset->getObject()->getHistoModification())
        ->setHistoModificateur($fieldset->getObject()->getHistoModificateur());
    if ($canEdit) echo $this->formControlGroup($fieldset->get('remove'));
    echo '</div></fieldset>';
}
echo $this->formCollection()->setElementHelper($this->formControlGroup())->renderTemplate($modificationServiceDu->get('modificationServiceDu'));

?>
</fieldset>
<div class="text-info" id="modification-service-du-comptage"></div>
<?php
if ($canEdit) {
    echo $this->formButton($form->get('ajouter'));
    echo $this->formHidden($form->get('security'));
    echo $this->formSubmit($form->get('submit')->setAttribute('class', 'btn btn-primary'));
}
echo $this->form()->closeTag();
?>

<script>
    var formId = "<?= $form->getAttribute('id') ?>";
    var form = $("#" + formId);

    $("body").on('click', "#" + formId + " button.modification-service-du-ajouter", function ()
    {
        addLigne();
        return false;
    });
    $("body").on('click', "#" + formId + " button.modification-service-du-supprimer", function ()
    {
        if (getLigneCurrentCount() > 0) {
            removeLigne($(this));
        }
        return false;
    });

    $(function ()
    {
        <?php if (!$canEdit): ?>
        form.find('input').attr('readonly', "readonly");
        form.find('select').attr('disabled', "disabled");
        form.find('textarea').attr('readonly', "readonly");
        <?php endif; ?>

        updateLigneCounter();
        $(":input").tooltip();
        $('body')
            .on('change', "#" + formId + " select.modification-service-du-motif", function ()
            {
                var select = $(this); // select de référence, dont la valeur a changé
                if (select.val() === '') {
                    return;
                }
            })
            .on('change', "#" + formId + " input.modification-service-du-heures", function ()
            {
                updateLigneCounter();
            });
    });

    function addLigne()
    {
        var currentCount = getLigneCurrentCount();
        var template = $('> fieldset > span', form).data('template');
        var element = $(template.replace(/__index__/g, currentCount));
        $('> fieldset', form).append(element.fadeIn());
        updateLigneCounter();
        return element;
    }

    function removeLigne(button)
    {
        $(button).parentsUntil('fieldset').parent().remove();
        updateLigneCounter();
        return false;
    }

    function getLignes()
    {
        return $('> fieldset > fieldset', form);
    }

    function getLigneCurrentCount()
    {
        return getLignes().length;
    }

    function getLigneCurrentTotal()
    {
        var total = 0;
        $.each(getLignes(), function (index, ligne) { total = total + Formatter.stringToFloat($(".modification-service-du-heures", ligne).val()); });
        return total;
    }

    function updateLigneCounter()
    {
        var msg = "Aucune modification de service dû.";
        var currentCount = getLigneCurrentCount();
        if (currentCount) {
            var total = getLigneCurrentTotal();
            msg = currentCount + " modification(s) de service dû (total = " + Formatter.floatToString(total) + ").";
        }
        $("#modification-service-du-comptage").html(msg);
    }
</script>