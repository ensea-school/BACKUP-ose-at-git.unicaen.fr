<?php

namespace Application\Controller;

use Application\Entity\Db\nommaj;
use Application\Service\Traits\nommajServiceAwareTrait;
use Application\Exception\DbException;
use Application\Form\nommaj\Traits\nommajSaisieFormAwareTrait;
use UnicaenApp\View\Model\MessengerViewModel;

class nommajController extends AbstractController
{
    use nommajServiceAwareTrait;
    use nommajSaisieFormAwareTrait;


    public function indexAction()
    {
        $this->em()->getFilters()->enable('historique')->init([
            nommaj::class,
        ]);

        $nomms = $this->getServicenommaj()->getList();

        return compact('nomms');
    }



    public function saisieAction()
    {
        /* @var $nomm nommaj */

        $nomm = $this->getEvent()->getParam('nomtiret');

        $form = $this->getFormnommajSaisie();
        if (empty($nomm)) {
            $title = 'Création d\'une nouvelle nommaj';
            $nomm = $this->getServicenommaj()->newEntity();
        } else {
            $title = 'Édition d\'une nommaj';
        }

        $form->bindRequestSave($nomm, $this->getRequest(), function (nommaj $fr) {
            try {
                $this->getServicenommaj()->save($fr);
                $this->flashMessenger()->addSuccessMessage('Enregistrement effectué');
            } catch (\Exception $e) {
                $e = DbException::translate($e);
                $this->flashMessenger()->addErrorMessage($e->getMessage() . ':' . $fr->getId());
            }
        });

        return compact('form', 'title');
    }

    public function deleteAction()
    {
        $nomm = $this->getEvent()->getParam('nomtiret');

        try {
            $this->getServicenommaj()->delete($nomm);
            $this->flashMessenger()->addSuccessMessage("nommaj supprimée avec succès.");
        } catch (\Exception $e) {
            $this->flashMessenger()->addErrorMessage(DbException::translate($e)->getMessage());
        }
        return new MessengerViewModel(compact('nomm'));
    }
}
