<?php

namespace Paiement\Service;

use Application\Service\AbstractEntityService;
use Application\Service\RuntimeException;
use Application\Service\Traits\SourceServiceAwareTrait;
use Paiement\Entity\Db\CentreCoutStructure;

/**
 * Description of TypeCentreCoutStructure
 */
class CentreCoutStructureService extends AbstractEntityService
{
    use SourceServiceAwareTrait;


    /**
     * retourne la classe des entités
     *
     * @return string
     * @throws RuntimeException
     */
    public function getEntityClass ()
    {
        return CentreCoutStructure::class;
    }



    /**
     * Retourne l'alias d'entité courante
     *
     * @return string
     */
    public function getAlias ()
    {
        return 'ccs';
    }



    /**
     * @param CentreCoutStructure $entity
     *
     * @return CentreCoutStructure
     */
    public function save ($entity)
    {
        if (!$entity->getSource()) {
            $entity->setSource($this->getServiceSource()->getOse());
        }
        if (!$entity->getSourceCode()) {
            $entity->setSourceCode(uniqid('CCS_OSE_'));
        }

        $centreCoutStructure = parent::save($entity);
        $this->getEntityManager()->getConnection()->executeStatement('BEGIN OSE_DIVERS.UPDATE_STRUCTURES(); END;');

        return $centreCoutStructure;// TODO: Change the autogenerated stub
    }



    /**
     * @param CentreCoutStructure $entity
     *
     * @return self
     */
    public function delete ($entity, $softDelete = true): self
    {
        $delete = parent::delete($entity, $softDelete);
        $this->getEntityManager()->getConnection()->executeStatement('BEGIN OSE_DIVERS.UPDATE_STRUCTURES(); END;');

        return $delete;// TODO: Change the autogenerated stub
    }

}
