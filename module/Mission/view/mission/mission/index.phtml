<?php
/**
 * @var $this              \Application\View\Renderer\PhpRenderer
 * @var $intervenant       \Application\Entity\Db\Intervenant
 * @var $missionForm       \Mission\Form\MissionForm
 */

use Application\Entity\Db\WfEtape;

$title     = 'Missions';
$nextEtape = WfEtape::CODE_SERVICE_SAISIE;

$canAddMission = true;
$missionForm->vueJsify('mission', 'submitForm');

$this->intervenant($intervenant)->renderTitle($title);

echo $this->messenger()->addCurrentMessagesFromFlashMessenger();

?>
    <template id="mission">
        <div :id="mission.id" class="card bg-default">
            <div class="card-header form-inline">
                <?= $this->formControlGroup($missionForm->get('typeMission')->setAttribute('style', 'width: 50%')) ?>
                &nbsp;, du&nbsp;<?= $this->formControlGroup($missionForm->get('dateDebut')) ?>
                &nbsp;au&nbsp;<?= $this->formControlGroup($missionForm->get('dateFin')) ?>

            </div>
            <div class="card-body">
                <?= $this->form()->openTag($missionForm); ?>
                <div class="row">
                    <div class="col-md-6"><?= $this->formControlGroup($missionForm->get('structure')) ?></div>
                    <div class="col-md-3"><?= $this->formControlGroup($missionForm->get('missionTauxRemu')) ?></div>
                    <div class="col-md-3"><?= $this->formControlGroup($missionForm->get('heures')) ?></div>
                </div>
                <div class="row">
                    <div class="col-md-12"><?= $this->formControlGroup($missionForm->get('description')) ?></div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <?= $this->formSubmit($missionForm->get('submit')) ?>
                        <a class="btn btn-danger" @click="deleteMission">Suppression de la mission</a>
                    </div>

                </div>
                <?= $this->form()->closeTag(); ?>
            </div>
        </div>
    </template>
    <script>

        Vue.component('mission', {
            template: '#mission',
            props: ['mission'],
            methods: {
                submitForm(event)
                {
                    var that = this
                    // var popover = new bootstrap.Popover(event.submitter, {
                    //     content: 'Enregistrement en cours...'
                    // });
                    // popover.show();

                    $.ajax({
                        type: 'POST',
                        submitter: event.submitter,
                        msg: 'Enregistrement en cours',
                        successMsg: 'Enregistrement effectué',
                        url: '<?= $this->url('mission/modifier') ?>',
                        data: this.mission,
                        success: function (response) {
                            // mettre à jour l'ID de la mission avec l'ID retourné par le serveur
                            that.mission = response.data;
                            //this.mission = response.data;
                        }
                    });
                },
                deleteMission(mission)
                {
                    this.$emit('delete', this.mission);
                }
            }
        })

    </script>


    <div id="missions">
        <mission v-for="mission in missions" v-on:delete="deleteMission" :key="mission.id" :mission="mission"></mission>
        <a v-if="canAddMission" class="btn btn-primary" @click="addMission">Ajout d'une nouvelle mission</a>
    </div>
    <script>

        var missions = new Vue({
            el: '#missions',
            data: {
                missions: <?= json_encode($missions) ?>,
                canAddMission: <?= $canAddMission ? 'true' : 'false' ?>,
                nextMissionId: -1
            },
            methods: {
                addMission()
                {
                    this.missions.push({id: this.nextMissionId--});
                },
                deleteMission(mission)
                {
                    const index = this.missions.indexOf(mission);
                    this.missions.splice(index, 1);
                }
            }
        })

    </script>
    <hr/>
<?php

echo $this->feuilleDeRoute($intervenant)->renderNav($nextEtape);