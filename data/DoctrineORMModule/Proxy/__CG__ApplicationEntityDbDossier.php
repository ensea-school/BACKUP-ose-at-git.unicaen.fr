<?php

namespace DoctrineORMModule\Proxy\__CG__\Application\Entity\Db;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Dossier extends \Application\Entity\Db\Dossier implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'adresse', 'civilite', 'email', 'telephone', 'histoCreation', 'histoDestruction', 'histoModification', 'nomPatronymique', 'nomUsuel', 'numeroInsee', 'numeroInseeEstProvisoire', 'prenom', 'rib', 'statut', 'premierRecrutement', 'perteEmploi', 'pieceJointe', 'id', 'histoModificateur', 'histoDestructeur', 'histoCreateur');
        }

        return array('__isInitialized__', 'adresse', 'civilite', 'email', 'telephone', 'histoCreation', 'histoDestruction', 'histoModification', 'nomPatronymique', 'nomUsuel', 'numeroInsee', 'numeroInseeEstProvisoire', 'prenom', 'rib', 'statut', 'premierRecrutement', 'perteEmploi', 'pieceJointe', 'id', 'histoModificateur', 'histoDestructeur', 'histoCreateur');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Dossier $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setAdresse($adresse)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdresse', array($adresse));

        return parent::setAdresse($adresse);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdresse()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdresse', array());

        return parent::getAdresse();
    }

    /**
     * {@inheritDoc}
     */
    public function setCivilite(\Application\Entity\Db\Civilite $civilite)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCivilite', array($civilite));

        return parent::setCivilite($civilite);
    }

    /**
     * {@inheritDoc}
     */
    public function getCivilite()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCivilite', array());

        return parent::getCivilite();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', array($email));

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', array());

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setTelephone($telephone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTelephone', array($telephone));

        return parent::setTelephone($telephone);
    }

    /**
     * {@inheritDoc}
     */
    public function getTelephone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTelephone', array());

        return parent::getTelephone();
    }

    /**
     * {@inheritDoc}
     */
    public function setHistoCreation($histoCreation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHistoCreation', array($histoCreation));

        return parent::setHistoCreation($histoCreation);
    }

    /**
     * {@inheritDoc}
     */
    public function getHistoCreation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHistoCreation', array());

        return parent::getHistoCreation();
    }

    /**
     * {@inheritDoc}
     */
    public function setHistoDestruction($histoDestruction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHistoDestruction', array($histoDestruction));

        return parent::setHistoDestruction($histoDestruction);
    }

    /**
     * {@inheritDoc}
     */
    public function getHistoDestruction()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHistoDestruction', array());

        return parent::getHistoDestruction();
    }

    /**
     * {@inheritDoc}
     */
    public function setHistoModification($histoModification)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHistoModification', array($histoModification));

        return parent::setHistoModification($histoModification);
    }

    /**
     * {@inheritDoc}
     */
    public function getHistoModification()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHistoModification', array());

        return parent::getHistoModification();
    }

    /**
     * {@inheritDoc}
     */
    public function setNomPatronymique($nomPatronymique)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNomPatronymique', array($nomPatronymique));

        return parent::setNomPatronymique($nomPatronymique);
    }

    /**
     * {@inheritDoc}
     */
    public function getNomPatronymique()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNomPatronymique', array());

        return parent::getNomPatronymique();
    }

    /**
     * {@inheritDoc}
     */
    public function setNomUsuel($nomUsuel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNomUsuel', array($nomUsuel));

        return parent::setNomUsuel($nomUsuel);
    }

    /**
     * {@inheritDoc}
     */
    public function getNomUsuel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNomUsuel', array());

        return parent::getNomUsuel();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumeroInsee($numeroInsee)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumeroInsee', array($numeroInsee));

        return parent::setNumeroInsee($numeroInsee);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumeroInsee()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumeroInsee', array());

        return parent::getNumeroInsee();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumeroInseeEstProvisoire($numeroInseeEstProvisoire)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumeroInseeEstProvisoire', array($numeroInseeEstProvisoire));

        return parent::setNumeroInseeEstProvisoire($numeroInseeEstProvisoire);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumeroInseeEstProvisoire()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumeroInseeEstProvisoire', array());

        return parent::getNumeroInseeEstProvisoire();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrenom($prenom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrenom', array($prenom));

        return parent::setPrenom($prenom);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrenom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrenom', array());

        return parent::getPrenom();
    }

    /**
     * {@inheritDoc}
     */
    public function setRib($rib)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRib', array($rib));

        return parent::setRib($rib);
    }

    /**
     * {@inheritDoc}
     */
    public function getRib()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRib', array());

        return parent::getRib();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatut(\Application\Entity\Db\StatutIntervenant $statut = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatut', array($statut));

        return parent::setStatut($statut);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatut()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatut', array());

        return parent::getStatut();
    }

    /**
     * {@inheritDoc}
     */
    public function setPremierRecrutement($premierRecrutement)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPremierRecrutement', array($premierRecrutement));

        return parent::setPremierRecrutement($premierRecrutement);
    }

    /**
     * {@inheritDoc}
     */
    public function getPremierRecrutement()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPremierRecrutement', array());

        return parent::getPremierRecrutement();
    }

    /**
     * {@inheritDoc}
     */
    public function setPerteEmploi($perteEmploi)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPerteEmploi', array($perteEmploi));

        return parent::setPerteEmploi($perteEmploi);
    }

    /**
     * {@inheritDoc}
     */
    public function getPerteEmploi()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPerteEmploi', array());

        return parent::getPerteEmploi();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setHistoModificateur(\Application\Entity\Db\Utilisateur $histoModificateur = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHistoModificateur', array($histoModificateur));

        return parent::setHistoModificateur($histoModificateur);
    }

    /**
     * {@inheritDoc}
     */
    public function getHistoModificateur()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHistoModificateur', array());

        return parent::getHistoModificateur();
    }

    /**
     * {@inheritDoc}
     */
    public function setHistoDestructeur(\Application\Entity\Db\Utilisateur $histoDestructeur = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHistoDestructeur', array($histoDestructeur));

        return parent::setHistoDestructeur($histoDestructeur);
    }

    /**
     * {@inheritDoc}
     */
    public function getHistoDestructeur()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHistoDestructeur', array());

        return parent::getHistoDestructeur();
    }

    /**
     * {@inheritDoc}
     */
    public function setHistoCreateur(\Application\Entity\Db\Utilisateur $histoCreateur = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHistoCreateur', array($histoCreateur));

        return parent::setHistoCreateur($histoCreateur);
    }

    /**
     * {@inheritDoc}
     */
    public function getHistoCreateur()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHistoCreateur', array());

        return parent::getHistoCreateur();
    }

    /**
     * {@inheritDoc}
     */
    public function getPieceJointe()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPieceJointe', array());

        return parent::getPieceJointe();
    }

    /**
     * {@inheritDoc}
     */
    public function addPieceJointe(\Application\Entity\Db\PieceJointe $pieceJointe)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPieceJointe', array($pieceJointe));

        return parent::addPieceJointe($pieceJointe);
    }

    /**
     * {@inheritDoc}
     */
    public function removePieceJointe(\Application\Entity\Db\PieceJointe $pieceJointe)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePieceJointe', array($pieceJointe));

        return parent::removePieceJointe($pieceJointe);
    }

    /**
     * {@inheritDoc}
     */
    public function fromIntervenant(\Application\Entity\Db\IntervenantExterieur $intervenant)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'fromIntervenant', array($intervenant));

        return parent::fromIntervenant($intervenant);
    }

}
