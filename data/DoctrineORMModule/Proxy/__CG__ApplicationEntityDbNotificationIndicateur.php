<?php

namespace DoctrineORMModule\Proxy\__CG__\Application\Entity\Db;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class NotificationIndicateur extends \Application\Entity\Db\NotificationIndicateur implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'structure', 'indicateur', 'personnel', 'frequence', 'dateAbonnement', 'dateDernNotif');
        }

        return array('__isInitialized__', 'id', 'structure', 'indicateur', 'personnel', 'frequence', 'dateAbonnement', 'dateDernNotif');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (NotificationIndicateur $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setIndicateur(\Application\Entity\Db\Indicateur $indicateur = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIndicateur', array($indicateur));

        return parent::setIndicateur($indicateur);
    }

    /**
     * {@inheritDoc}
     */
    public function getIndicateur()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIndicateur', array());

        return parent::getIndicateur();
    }

    /**
     * {@inheritDoc}
     */
    public function setStructure(\Application\Entity\Db\Structure $structure = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStructure', array($structure));

        return parent::setStructure($structure);
    }

    /**
     * {@inheritDoc}
     */
    public function getStructure()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStructure', array());

        return parent::getStructure();
    }

    /**
     * {@inheritDoc}
     */
    public function setPersonnel(\Application\Entity\Db\Personnel $personnel = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPersonnel', array($personnel));

        return parent::setPersonnel($personnel);
    }

    /**
     * {@inheritDoc}
     */
    public function getPersonnel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPersonnel', array());

        return parent::getPersonnel();
    }

    /**
     * {@inheritDoc}
     */
    public function setFrequence($frequence)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFrequence', array($frequence));

        return parent::setFrequence($frequence);
    }

    /**
     * {@inheritDoc}
     */
    public function getFrequence()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFrequence', array());

        return parent::getFrequence();
    }

    /**
     * {@inheritDoc}
     */
    public function getFrequenceToString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFrequenceToString', array());

        return parent::getFrequenceToString();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateDernNotif(\DateTime $date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateDernNotif', array($date));

        return parent::setDateDernNotif($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateDernNotif()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateDernNotif', array());

        return parent::getDateDernNotif();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateAbonnement(\DateTime $date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateAbonnement', array($date));

        return parent::setDateAbonnement($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateAbonnement()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateAbonnement', array());

        return parent::getDateAbonnement();
    }

    /**
     * {@inheritDoc}
     */
    public function getExtraInfos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExtraInfos', array());

        return parent::getExtraInfos();
    }

}
