<?php

namespace DoctrineORMModule\Proxy\__CG__\Application\Entity\Db;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class DemoOf extends \Application\Entity\Db\DemoOf implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'codAnu', 'codElp', 'codNivVet', 'codPel', 'codStr', 'codUe', 'codVet', 'libElp', 'libNivVet', 'libStr', 'libWebVet', 'licStr', 'licUe', 'id');
        }

        return array('__isInitialized__', 'codAnu', 'codElp', 'codNivVet', 'codPel', 'codStr', 'codUe', 'codVet', 'libElp', 'libNivVet', 'libStr', 'libWebVet', 'licStr', 'licUe', 'id');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (DemoOf $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setCodAnu($codAnu)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCodAnu', array($codAnu));

        return parent::setCodAnu($codAnu);
    }

    /**
     * {@inheritDoc}
     */
    public function getCodAnu()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCodAnu', array());

        return parent::getCodAnu();
    }

    /**
     * {@inheritDoc}
     */
    public function setCodElp($codElp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCodElp', array($codElp));

        return parent::setCodElp($codElp);
    }

    /**
     * {@inheritDoc}
     */
    public function getCodElp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCodElp', array());

        return parent::getCodElp();
    }

    /**
     * {@inheritDoc}
     */
    public function setCodNivVet($codNivVet)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCodNivVet', array($codNivVet));

        return parent::setCodNivVet($codNivVet);
    }

    /**
     * {@inheritDoc}
     */
    public function getCodNivVet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCodNivVet', array());

        return parent::getCodNivVet();
    }

    /**
     * {@inheritDoc}
     */
    public function setCodPel($codPel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCodPel', array($codPel));

        return parent::setCodPel($codPel);
    }

    /**
     * {@inheritDoc}
     */
    public function getCodPel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCodPel', array());

        return parent::getCodPel();
    }

    /**
     * {@inheritDoc}
     */
    public function setCodStr($codStr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCodStr', array($codStr));

        return parent::setCodStr($codStr);
    }

    /**
     * {@inheritDoc}
     */
    public function getCodStr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCodStr', array());

        return parent::getCodStr();
    }

    /**
     * {@inheritDoc}
     */
    public function setCodUe($codUe)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCodUe', array($codUe));

        return parent::setCodUe($codUe);
    }

    /**
     * {@inheritDoc}
     */
    public function getCodUe()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCodUe', array());

        return parent::getCodUe();
    }

    /**
     * {@inheritDoc}
     */
    public function setCodVet($codVet)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCodVet', array($codVet));

        return parent::setCodVet($codVet);
    }

    /**
     * {@inheritDoc}
     */
    public function getCodVet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCodVet', array());

        return parent::getCodVet();
    }

    /**
     * {@inheritDoc}
     */
    public function setLibElp($libElp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLibElp', array($libElp));

        return parent::setLibElp($libElp);
    }

    /**
     * {@inheritDoc}
     */
    public function getLibElp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLibElp', array());

        return parent::getLibElp();
    }

    /**
     * {@inheritDoc}
     */
    public function setLibNivVet($libNivVet)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLibNivVet', array($libNivVet));

        return parent::setLibNivVet($libNivVet);
    }

    /**
     * {@inheritDoc}
     */
    public function getLibNivVet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLibNivVet', array());

        return parent::getLibNivVet();
    }

    /**
     * {@inheritDoc}
     */
    public function setLibStr($libStr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLibStr', array($libStr));

        return parent::setLibStr($libStr);
    }

    /**
     * {@inheritDoc}
     */
    public function getLibStr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLibStr', array());

        return parent::getLibStr();
    }

    /**
     * {@inheritDoc}
     */
    public function setLibWebVet($libWebVet)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLibWebVet', array($libWebVet));

        return parent::setLibWebVet($libWebVet);
    }

    /**
     * {@inheritDoc}
     */
    public function getLibWebVet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLibWebVet', array());

        return parent::getLibWebVet();
    }

    /**
     * {@inheritDoc}
     */
    public function setLicStr($licStr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLicStr', array($licStr));

        return parent::setLicStr($licStr);
    }

    /**
     * {@inheritDoc}
     */
    public function getLicStr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLicStr', array());

        return parent::getLicStr();
    }

    /**
     * {@inheritDoc}
     */
    public function setLicUe($licUe)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLicUe', array($licUe));

        return parent::setLicUe($licUe);
    }

    /**
     * {@inheritDoc}
     */
    public function getLicUe()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLicUe', array());

        return parent::getLicUe();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

}
