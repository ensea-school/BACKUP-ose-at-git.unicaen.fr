name: Dailly clone from git.unicaen.fr

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"  # Déclenche tous les jours à minuit UTC

jobs:
  clone-repo:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout this GitHub repository
        uses: actions/checkout@v3

      - name: Get the last commit date from GitLab
        run: |
          # Cloner seulement l'historique du dernier commit de GitLab pour récupérer la date
          git clone --depth 1 https://git.unicaen.fr/open-source/OSE.git temp_gitlab_repo
          cd temp_gitlab_repo
          latest_commit_date_gitlab=$(git log -1 --format=%cI)
          echo "Date du dernier commit sur GitLab : $latest_commit_date_gitlab"
          cd ..
          rm -rf temp_gitlab_repo
          
          # Convertir la date du dernier commit en timestamp
          latest_commit_timestamp_gitlab=$(date -d "$latest_commit_date_gitlab" +%s)
          
          # Calculer le timestamp pour 24 heures en arrière
          current_timestamp=$(date +%s)
          threshold_timestamp=$((current_timestamp - 86400)) # 86400 secondes = 24 heures

          # Comparer la date du dernier commit avec le seuil des 24 heures
          if [ "$latest_commit_timestamp_gitlab" -ge "$threshold_timestamp" ]; then
            echo "clone_required=true" >> $GITHUB_ENV
            echo "Le clonage est nécessaire : un commit a été effectué sur GitLab dans les dernières 24 heures."
          else
            echo "clone_required=false" >> $GITHUB_ENV
            echo "Le clonage n'est pas nécessaire : aucun commit récent sur GitLab dans les dernières 24 heures."
          fi

      - name: Clone GitLab repository and push to GitHub
        if: env.clone_required == 'true'
        run: |
          # Cloner le dépôt GitLab
          git clone https://git.unicaen.fr/open-source/OSE.git
          cd OSE

          # Configurer Git pour l'authentification GitHub
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Rediriger l'origine vers GitHub et pousser les mises à jour
          git remote remove origin
          git remote add origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git push -u origin --all
          git push -u origin --tags
