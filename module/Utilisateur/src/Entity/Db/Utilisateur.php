<?php

namespace Utilisateur\Entity\Db;

use UnicaenApp\Entity\UserInterface as UnicaenUserInterface;
use Framework\User\UserInterface;
use UnicaenUtilisateur\Entity\Db\AbstractUser;
use UnicaenVue\Axios\AxiosExtractorInterface;


class Utilisateur extends AbstractUser implements UserInterface, UnicaenUserInterface, AxiosExtractorInterface
{
    const APP_UTILISATEUR_ID = 1;

    /**
     * @var string|null
     */
    protected $code;



    public function axiosDefinition(): array
    {
        return ['email', 'displayName'];
    }



    /**
     * @return \Laminas\Permissions\Acl\Role\RoleInterface[]
     */
    public function getRoles()
    {
        return [];
    }



    /**
     * @return null|string
     */
    public function getCode()
    {
        return $this->code;
    }



    /**
     * @param null|string $code
     *
     * @return Utilisateur
     */
    public function setCode($code): Utilisateur
    {
        $this->code = $code;

        return $this;
    }



    /**
     * Set password.
     *
     * @param string $password
     *
     * @return void
     */
    public function setPassword($password, $encrypt = false)
    {
        if ($encrypt) {
            $bcrypt   = new \ZfcUser\Password\Bcrypt();
            $password = $bcrypt->create($password);
        }
        parent::setPassword($password); // TODO: Change the autogenerated stub

        $this->setPasswordResetToken(null);
    }



    /**
     * The __toString method allows a class to decide how it will react when it is converted to a string.
     *
     * @return string
     * @link http://php.net/manual/en/language.oop5.magic.php#language.oop5.magic.tostring
     */
    public function __toString(): string
    {
        return $this->getDisplayName();
    }

}
